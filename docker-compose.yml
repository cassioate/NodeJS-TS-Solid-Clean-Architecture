version: '3'

networks:
  api-networks:
    driver: bridge

services:
  mongo:
    container_name: mongo-container
    image: mongo:3
    restart: always
    # No docker compose o campo volume dentro do container, tem que ser absoluto, então nao posso usar apenas "./"
    volumes:
      - ./data:/data/db
    ports:
      - 27017:27017
    #healthcheck:
      #test: ["CMD","mongo", "--eval", "db.adminCommand('ping')"]
     # interval: 10s
      #timeout: 10s
     # retries: 5
    networks: 
      - api-networks     

## OBSERVAÇÃO: lembrando que a API irá se conecatar com o DB através do nome mongo do service acima utilizando a mesma network aqui configurada,
## isso já está configura no arquivo env do projeto
  api:
    container_name: api-node-container
    build: .
    restart: always 
    # quando voce utilizar o "BUILD: .", para poder renomear o container vc tem que utilizar o "image:", ou entao ele ficara com nome aleatorio
    image: clean-node-api
    command: yarn start
    # Usar o volume no compose no lugar do dockerfile, por causa do cache, aqui ele sempre vai atualizar o dist quando ele for modificado, 
    # ja no dockerfile, pode acabar nao ataulizando por causa do cache
    volumes:
      - ./dist:/usr/src/clean-node-api/dist
    ports:
      - 5050:5050
    #depends_on:
      #mongo:
        #condition: service_healthy
    networks: 
      - api-networks      